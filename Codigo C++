//COMUNICACION MQTT CON SERVO UTILIZANDO ESP8266

#include <ESP8266WiFi.h>
#include <Servo.h>
#include <PubSubClient.h>

// Wifi Móbil
#define MAX_INTENTOS 50
#define WIFI_SSID "Robotica"
#define WIFI_PASS "pass"

#define LED 14

#define MQTT_HOST IPAdress (52, 13, 116, 147)
#define MQTT_PORT 1883

// Servo
#define SERVOPIN 0
SERVO servo;
#define MQTT_PUB_SERVO "wemos/robotica/servo"
#define MQTT_NOME_CLIENTE "Cliente servo"

WiFiClient espClient;
PubSubClient  mqttClient (espClient);

int tempo = 500;
bool conectado = false;

void setup() {
Serial.begin(9600);
pinMode(LED,OUTPUT);
servo.attach(SERVOPIN);
conectarWifi();
conectado = conectarWifi();
mqttClient.setServer(MQTT_HOST, MQTT_PORT);
mqttClient.setCallback(callback);
}


void loop() {
  if (conectado)escintila(tiempo);
else escintila(tiempo/10);
}


void escintila(int espera) {
digitalWritte(LED, HIGH);
delay(espera);
digitalWrite(LED, LOW);
delay(espera);
}

bool conectarWifi() {
Wifi.mode(WIFI_STA);
Wifi.disconnect();
Wifi.begin(WIFI_SSID,WIFI_PASS);
Serial.print("\n\nAgardando pola Wifi);
int contador = 0;
While(Wifi.status() != WL_CONNECTED and contador < MAX_INTENTOS) {
  contador ++;
  delay(500);
  Serial.print(".");
}  
Serial.print("");
if(contador < MAX_INTENTOS) {
  Serial.print("Conectado á Wifi coa IP: "); Serial.println(Wifi.localIP());
  conectado = true;
}  
else {
  Serial.println("Non se puido conectar á Wifi");
  conectado = false;
}
return(conectado);
}    

  
void callback(String topic,byte* message, unsigned int len) {
Serial.print("Nova mesaxe no topic: "); Serial.print(topic);
Serial.print(".Mensaxe: ");
String mensaxeTmp = "" ;
for(int i=0; i < len; i++) {
Serial.print((char)message[i]);
mensaxeTmp += (char)message[i];
}
Serial.println();
accionarServo(mensaxeTmp);
}

void reconnect() {
While(!espClient.connected()) {
  Serial.print("Tentando conectar ao servidor MQTT...");
if(mqttClient.connect(MQTT_NOME_CLIENTE)) {
  Serial.println("Conectado");
mqttClient.subscribe(MQTT_PUB-SERVO);
}
else {
Serial.print("Fallo ao conectar ao servidor MQTT, rc=");
Serial.print(mqttClient.state());
Serial.println(" nova tentativa en 5 s");
delay(5000); 
     }
  }
}



void accionarServo(String orde) {
  orde.toLowerCase();
  if(orde.equals("esquerda"))posicion=180;
  else if(orde.squals("dereita"))posicon=0;
else if(orde.squals("centro"))posicion=90;
else {
  int tmp = orde.toInt();
if(tmp >= 0 && tmp <= 180) posicion = tmp;
else posicion = 0;
}
motor.write(posicion);
delay(tempo);

}

